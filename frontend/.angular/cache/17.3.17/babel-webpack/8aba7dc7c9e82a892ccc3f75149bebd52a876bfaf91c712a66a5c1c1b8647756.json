{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:5000/api';\n    }\n    // Health check\n    healthCheck() {\n      return this.http.get(`${this.apiUrl}/health`);\n    }\n    // Chat with RAG\n    sendMessage(query, language = 'en', includeAudio = true) {\n      return this.http.post(`${this.apiUrl}/chat`, {\n        query,\n        language,\n        include_audio: includeAudio\n      });\n    }\n    // Get supported languages\n    getLanguages() {\n      return this.http.get(`${this.apiUrl}/languages`);\n    }\n    // Get KPIs\n    getKPIs() {\n      return this.http.get(`${this.apiUrl}/kpis`);\n    }\n    // Get chart data\n    getIncidentChart() {\n      return this.http.get(`${this.apiUrl}/charts/incidents`);\n    }\n    getEquipmentChart() {\n      return this.http.get(`${this.apiUrl}/charts/equipment`);\n    }\n    getProductionChart() {\n      return this.http.get(`${this.apiUrl}/charts/production`);\n    }\n    // Get recent incidents\n    getRecentIncidents(limit = 10) {\n      return this.http.get(`${this.apiUrl}/incidents/recent?limit=${limit}`);\n    }\n    // Get equipment alerts\n    getEquipmentAlerts() {\n      return this.http.get(`${this.apiUrl}/equipment/alerts`);\n    }\n    // Get production summary\n    getProductionSummary() {\n      return this.http.get(`${this.apiUrl}/production/summary`);\n    }\n    // Get manager guidance\n    getGuidance(scenario, language = 'en') {\n      return this.http.post(`${this.apiUrl}/guidance`, {\n        scenario,\n        language\n      });\n    }\n    static {\n      this.ɵfac = function ApiService_Factory(t) {\n        return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ApiService,\n        factory: ApiService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ApiService;\n})();","map":{"version":3,"names":["ApiService","constructor","http","apiUrl","healthCheck","get","sendMessage","query","language","includeAudio","post","include_audio","getLanguages","getKPIs","getIncidentChart","getEquipmentChart","getProductionChart","getRecentIncidents","limit","getEquipmentAlerts","getProductionSummary","getGuidance","scenario","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\pavit\\OneDrive\\Desktop\\mit\\thanucheck\\bhooom\\frontend\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ChatResponse, KPIsResponse, ChartResponse } from '../models/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  private apiUrl = 'http://localhost:5000/api';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Health check\r\n  healthCheck(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/health`);\r\n  }\r\n\r\n  // Chat with RAG\r\n  sendMessage(query: string, language: string = 'en', includeAudio: boolean = true): Observable<ChatResponse> {\r\n    return this.http.post<ChatResponse>(`${this.apiUrl}/chat`, {\r\n      query,\r\n      language,\r\n      include_audio: includeAudio\r\n    });\r\n  }\r\n\r\n  // Get supported languages\r\n  getLanguages(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/languages`);\r\n  }\r\n\r\n  // Get KPIs\r\n  getKPIs(): Observable<KPIsResponse> {\r\n    return this.http.get<KPIsResponse>(`${this.apiUrl}/kpis`);\r\n  }\r\n\r\n  // Get chart data\r\n  getIncidentChart(): Observable<ChartResponse> {\r\n    return this.http.get<ChartResponse>(`${this.apiUrl}/charts/incidents`);\r\n  }\r\n\r\n  getEquipmentChart(): Observable<ChartResponse> {\r\n    return this.http.get<ChartResponse>(`${this.apiUrl}/charts/equipment`);\r\n  }\r\n\r\n  getProductionChart(): Observable<ChartResponse> {\r\n    return this.http.get<ChartResponse>(`${this.apiUrl}/charts/production`);\r\n  }\r\n\r\n  // Get recent incidents\r\n  getRecentIncidents(limit: number = 10): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/incidents/recent?limit=${limit}`);\r\n  }\r\n\r\n  // Get equipment alerts\r\n  getEquipmentAlerts(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/equipment/alerts`);\r\n  }\r\n\r\n  // Get production summary\r\n  getProductionSummary(): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/production/summary`);\r\n  }\r\n\r\n  // Get manager guidance\r\n  getGuidance(scenario: string, language: string = 'en'): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/guidance`, {\r\n      scenario,\r\n      language\r\n    });\r\n  }\r\n}"],"mappings":";;AAQA,WAAaA,UAAU;EAAjB,MAAOA,UAAU;IAGrBC,YAAoBC,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;MAFhB,KAAAC,MAAM,GAAG,2BAA2B;IAEJ;IAExC;IACAC,WAAWA,CAAA;MACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,SAAS,CAAC;IAC/C;IAEA;IACAG,WAAWA,CAACC,KAAa,EAAEC,QAAA,GAAmB,IAAI,EAAEC,YAAA,GAAwB,IAAI;MAC9E,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAe,GAAG,IAAI,CAACP,MAAM,OAAO,EAAE;QACzDI,KAAK;QACLC,QAAQ;QACRG,aAAa,EAAEF;OAChB,CAAC;IACJ;IAEA;IACAG,YAAYA,CAAA;MACV,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,YAAY,CAAC;IAClD;IAEA;IACAU,OAAOA,CAAA;MACL,OAAO,IAAI,CAACX,IAAI,CAACG,GAAG,CAAe,GAAG,IAAI,CAACF,MAAM,OAAO,CAAC;IAC3D;IAEA;IACAW,gBAAgBA,CAAA;MACd,OAAO,IAAI,CAACZ,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,mBAAmB,CAAC;IACxE;IAEAY,iBAAiBA,CAAA;MACf,OAAO,IAAI,CAACb,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,mBAAmB,CAAC;IACxE;IAEAa,kBAAkBA,CAAA;MAChB,OAAO,IAAI,CAACd,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,oBAAoB,CAAC;IACzE;IAEA;IACAc,kBAAkBA,CAACC,KAAA,GAAgB,EAAE;MACnC,OAAO,IAAI,CAAChB,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,2BAA2Be,KAAK,EAAE,CAAC;IACxE;IAEA;IACAC,kBAAkBA,CAAA;MAChB,OAAO,IAAI,CAACjB,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,mBAAmB,CAAC;IACzD;IAEA;IACAiB,oBAAoBA,CAAA;MAClB,OAAO,IAAI,CAAClB,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,qBAAqB,CAAC;IAC3D;IAEA;IACAkB,WAAWA,CAACC,QAAgB,EAAEd,QAAA,GAAmB,IAAI;MACnD,OAAO,IAAI,CAACN,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,MAAM,WAAW,EAAE;QAC/CmB,QAAQ;QACRd;OACD,CAAC;IACJ;;;yBA/DWR,UAAU,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;MAAA;IAAA;;;eAAV1B,UAAU;QAAA2B,OAAA,EAAV3B,UAAU,CAAA4B,IAAA;QAAAC,UAAA,EAFT;MAAM;IAAA;;SAEP7B,UAAU;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}