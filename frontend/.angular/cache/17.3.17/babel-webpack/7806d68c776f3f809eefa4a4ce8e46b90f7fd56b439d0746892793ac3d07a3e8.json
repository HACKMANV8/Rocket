{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common'; // <-- For *ngIf, *ngFor, date pipe\nimport { FormsModule } from '@angular/forms'; // <-- For [(ngModel)]\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.messages = [{\n      sender: 'ai',\n      text: 'Welcome to AI Mining Operations Co-Pilot! Ask me anything about fuel, maintenance, production, or emissions.',\n      timestamp: new Date()\n    }];\n    this.userInput = '';\n    this.isLoading = false;\n    this.alerts = [{\n      equipment_name: 'Excavator 1',\n      message: 'Maintenance due soon',\n      severity: 'pending',\n      days_until: 5\n    }, {\n      equipment_name: 'Crusher A',\n      message: 'Filter replacement required',\n      severity: 'urgent',\n      days_until: 2\n    }];\n    this.equipmentData = [{\n      id: 1,\n      name: 'Excavator 1',\n      type: 'Excavator',\n      status: 'Active'\n    }, {\n      id: 2,\n      name: 'Drill B',\n      type: 'Drill',\n      status: 'Active'\n    }];\n    this.carbonFootprint = {\n      co2_emissions_tons: 120,\n      sdg_13_status: 'Moderate'\n    };\n    this.uploadTypes = [{\n      label: 'Fuel Consumption',\n      key: 'fuel'\n    }, {\n      label: 'Production Efficiency',\n      key: 'production'\n    }, {\n      label: 'Equipment Details',\n      key: 'equipment'\n    }, {\n      label: 'Maintenance Records',\n      key: 'maintenance'\n    }];\n    this.selectedFiles = {};\n    this.showUpload = false;\n  }\n  toggleUpload() {\n    this.showUpload = !this.showUpload;\n  }\n  sendMessage() {\n    if (!this.userInput.trim()) return;\n    const msg = {\n      sender: 'user',\n      text: this.userInput,\n      timestamp: new Date()\n    };\n    this.messages.push(msg);\n    this.isLoading = true;\n    this.userInput = '';\n    setTimeout(() => {\n      this.messages.push({\n        sender: 'ai',\n        text: 'This is a sample AI response. Your uploaded mining data will help me provide insights soon!',\n        timestamp: new Date()\n      });\n      this.isLoading = false;\n    }, 1000);\n  }\n  onFileSelected(event, type) {\n    const file = event.target.files[0];\n    if (file) this.selectedFiles[type] = file;\n  }\n  uploadFile(type) {\n    const file = this.selectedFiles[type];\n    if (!file) return alert('Please select a file to upload.');\n    alert(`File \"${file.name}\" uploaded for ${type}`);\n  }\n  getAlertClass(severity) {\n    switch (severity) {\n      case 'urgent':\n        return 'alert-urgent';\n      case 'pending':\n        return 'alert-pending';\n      default:\n        return 'alert-normal';\n    }\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  imports: [CommonModule, FormsModule, DatePipe],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","CommonModule","DatePipe","FormsModule","AppComponent","constructor","messages","sender","text","timestamp","Date","userInput","isLoading","alerts","equipment_name","message","severity","days_until","equipmentData","id","name","type","status","carbonFootprint","co2_emissions_tons","sdg_13_status","uploadTypes","label","key","selectedFiles","showUpload","toggleUpload","sendMessage","trim","msg","push","setTimeout","onFileSelected","event","file","target","files","uploadFile","alert","getAlertClass","__decorate","selector","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\pavit\\OneDrive\\Desktop\\mit\\thanucheck\\bhooom\\frontend\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';  // <-- For *ngIf, *ngFor, date pipe\r\nimport { FormsModule } from '@angular/forms';              // <-- For [(ngModel)]\r\n\r\ninterface ChatMessage {\r\n  sender: 'user' | 'ai';\r\n  text: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface Alert {\r\n  equipment_name: string;\r\n  message: string;\r\n  severity?: 'urgent' | 'pending' | 'normal';\r\n  days_until?: number;\r\n}\r\n\r\ninterface Equipment {\r\n  id: number;\r\n  name: string;\r\n  type: string;\r\n  status?: string;\r\n}\r\n\r\ninterface CarbonFootprint {\r\n  co2_emissions_tons?: number;\r\n  sdg_13_status?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',          // <-- mark it as standalone\r\n  imports: [CommonModule, FormsModule, DatePipe],  // <-- important!\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  messages: ChatMessage[] = [\r\n    { sender: 'ai', text: 'Welcome to AI Mining Operations Co-Pilot! Ask me anything about fuel, maintenance, production, or emissions.', timestamp: new Date() }\r\n  ];\r\n  userInput = '';\r\n  isLoading = false;\r\n\r\n  alerts: Alert[] = [\r\n    { equipment_name: 'Excavator 1', message: 'Maintenance due soon', severity: 'pending', days_until: 5 },\r\n    { equipment_name: 'Crusher A', message: 'Filter replacement required', severity: 'urgent', days_until: 2 }\r\n  ];\r\n\r\n  equipmentData: Equipment[] = [\r\n    { id: 1, name: 'Excavator 1', type: 'Excavator', status: 'Active' },\r\n    { id: 2, name: 'Drill B', type: 'Drill', status: 'Active' }\r\n  ];\r\n\r\n  carbonFootprint: CarbonFootprint = {\r\n    co2_emissions_tons: 120,\r\n    sdg_13_status: 'Moderate'\r\n  };\r\n\r\n  uploadTypes = [\r\n    { label: 'Fuel Consumption', key: 'fuel' },\r\n    { label: 'Production Efficiency', key: 'production' },\r\n    { label: 'Equipment Details', key: 'equipment' },\r\n    { label: 'Maintenance Records', key: 'maintenance' },\r\n  ];\r\n\r\n  selectedFiles: { [key: string]: File } = {};\r\n  showUpload = false;\r\n\r\n  toggleUpload() {\r\n    this.showUpload = !this.showUpload;\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.userInput.trim()) return;\r\n    const msg: ChatMessage = { sender: 'user', text: this.userInput, timestamp: new Date() };\r\n    this.messages.push(msg);\r\n    this.isLoading = true;\r\n    this.userInput = '';\r\n\r\n    setTimeout(() => {\r\n      this.messages.push({\r\n        sender: 'ai',\r\n        text: 'This is a sample AI response. Your uploaded mining data will help me provide insights soon!',\r\n        timestamp: new Date()\r\n      });\r\n      this.isLoading = false;\r\n    }, 1000);\r\n  }\r\n\r\n  onFileSelected(event: any, type: string) {\r\n    const file = event.target.files[0];\r\n    if (file) this.selectedFiles[type] = file;\r\n  }\r\n\r\n  uploadFile(type: string) {\r\n    const file = this.selectedFiles[type];\r\n    if (!file) return alert('Please select a file to upload.');\r\n    alert(`File \"${file.name}\" uploaded for ${type}`);\r\n  }\r\n\r\n getAlertClass(severity?: string) {\r\n  switch(severity) {\r\n    case 'urgent': return 'alert-urgent';\r\n    case 'pending': return 'alert-pending';\r\n    default: return 'alert-normal';\r\n  }\r\n}\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}